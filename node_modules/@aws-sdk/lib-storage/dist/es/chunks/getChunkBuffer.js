import { __asyncGenerator, __await, __generator } from "tslib";
export function getChunkBuffer(data, partSize) {
    return __asyncGenerator(this, arguments, function getChunkBuffer_1() {
        var partNumber, startByte, endByte;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    partNumber = 1;
                    startByte = 0;
                    endByte = partSize;
                    _a.label = 1;
                case 1:
                    if (!(endByte < data.byteLength)) return [3 /*break*/, 4];
                    return [4 /*yield*/, __await({
                            partNumber: partNumber,
                            data: data.slice(startByte, endByte),
                        })];
                case 2: return [4 /*yield*/, _a.sent()];
                case 3:
                    _a.sent();
                    partNumber += 1;
                    startByte = endByte;
                    endByte = startByte + partSize;
                    return [3 /*break*/, 1];
                case 4: return [4 /*yield*/, __await({
                        partNumber: partNumber,
                        data: data.slice(startByte),
                        lastPart: true,
                    })];
                case 5: return [4 /*yield*/, _a.sent()];
                case 6:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2h1bmtCdWZmZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2h1bmtzL2dldENodW5rQnVmZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxNQUFNLFVBQWlCLGNBQWMsQ0FBQyxJQUFZLEVBQUUsUUFBZ0I7Ozs7OztvQkFDOUQsVUFBVSxHQUFHLENBQUMsQ0FBQztvQkFDZixTQUFTLEdBQUcsQ0FBQyxDQUFDO29CQUNkLE9BQU8sR0FBRyxRQUFRLENBQUM7Ozt5QkFFaEIsQ0FBQSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQTtpREFDeEI7NEJBQ0osVUFBVSxZQUFBOzRCQUNWLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUM7eUJBQ3JDO3dCQUhELGdDQUdDOztvQkFIRCxTQUdDLENBQUM7b0JBQ0YsVUFBVSxJQUFJLENBQUMsQ0FBQztvQkFDaEIsU0FBUyxHQUFHLE9BQU8sQ0FBQztvQkFDcEIsT0FBTyxHQUFHLFNBQVMsR0FBRyxRQUFRLENBQUM7O3FEQUczQjt3QkFDSixVQUFVLFlBQUE7d0JBQ1YsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO3dCQUMzQixRQUFRLEVBQUUsSUFBSTtxQkFDZjt3QkFKRCxnQ0FJQzs7b0JBSkQsU0FJQyxDQUFDOzs7OztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmF3RGF0YVBhcnQgfSBmcm9tIFwiLi4vVXBsb2FkXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiogZ2V0Q2h1bmtCdWZmZXIoZGF0YTogQnVmZmVyLCBwYXJ0U2l6ZTogbnVtYmVyKTogQXN5bmNHZW5lcmF0b3I8UmF3RGF0YVBhcnQsIHZvaWQsIHVuZGVmaW5lZD4ge1xuICBsZXQgcGFydE51bWJlciA9IDE7XG4gIGxldCBzdGFydEJ5dGUgPSAwO1xuICBsZXQgZW5kQnl0ZSA9IHBhcnRTaXplO1xuXG4gIHdoaWxlIChlbmRCeXRlIDwgZGF0YS5ieXRlTGVuZ3RoKSB7XG4gICAgeWllbGQge1xuICAgICAgcGFydE51bWJlcixcbiAgICAgIGRhdGE6IGRhdGEuc2xpY2Uoc3RhcnRCeXRlLCBlbmRCeXRlKSxcbiAgICB9O1xuICAgIHBhcnROdW1iZXIgKz0gMTtcbiAgICBzdGFydEJ5dGUgPSBlbmRCeXRlO1xuICAgIGVuZEJ5dGUgPSBzdGFydEJ5dGUgKyBwYXJ0U2l6ZTtcbiAgfVxuXG4gIHlpZWxkIHtcbiAgICBwYXJ0TnVtYmVyLFxuICAgIGRhdGE6IGRhdGEuc2xpY2Uoc3RhcnRCeXRlKSxcbiAgICBsYXN0UGFydDogdHJ1ZSxcbiAgfTtcbn1cbiJdfQ==