"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.S3SignatureV4 = void 0;
const signature_v4_1 = require("@aws-sdk/signature-v4");
/**
 * A SigV4-compatible signer for S3 service. In order to support SigV4a algorithm according to the operation input
 * dynamically, the signer wraps native module SigV4a signer and JS SigV4 signer. It signs the request with SigV4a
 * algorithm if the request needs to be signed with `*` region. Otherwise, it signs the request with normal SigV4
 * signer.
 * Note that SigV4a signer is only supported in Node.js now because it depends on a native dependency.
 * @private
 */
class S3SignatureV4 {
    constructor(options) {
        this.sigv4Signer = new signature_v4_1.SignatureV4(options);
        this.signerOptions = options;
    }
    async sign(requestToSign, options = {}) {
        if (options.signingRegion === "*") {
            if (this.signerOptions.runtime !== "node")
                throw new Error("This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js");
            return (await this.getSigv4aSigner()).sign(requestToSign, options);
        }
        return this.sigv4Signer.sign(requestToSign, options);
    }
    async presign(originalRequest, options = {}) {
        if (options.signingRegion === "*") {
            if (this.signerOptions.runtime !== "node")
                throw new Error("This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js");
            return (await this.getSigv4aSigner()).presign(originalRequest, options);
        }
        return this.sigv4Signer.presign(originalRequest, options);
    }
    async getSigv4aSigner() {
        if (!this.sigv4aSigner) {
            let CrtSignerV4;
            try {
                CrtSignerV4 = (await Promise.resolve().then(() => __importStar(require("@aws-sdk/signature-v4-crt")))).CrtSignerV4;
            }
            catch (e) {
                e.message =
                    `${e.message}\nPlease check if you have installed "@aws-sdk/signature-v4-crt" package explicitly. \n` +
                        "For more information please go to https://github.com/aws/aws-sdk-js-v3#known-issues";
                throw e;
            }
            this.sigv4aSigner = new CrtSignerV4({
                ...this.signerOptions,
                signingAlgorithm: 1,
            });
        }
        return this.sigv4aSigner;
    }
}
exports.S3SignatureV4 = S3SignatureV4;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUzNTaWduYXR1cmVWNC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TM1NpZ25hdHVyZVY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUE0RjtBQWU1Rjs7Ozs7OztHQU9HO0FBQ0gsTUFBYSxhQUFhO0lBS3hCLFlBQVksT0FBdUI7UUFDakMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLDBCQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUM7SUFDL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBMEIsRUFBRSxVQUFtQyxFQUFFO1FBQ2pGLElBQUksT0FBTyxDQUFDLGFBQWEsS0FBSyxHQUFHLEVBQUU7WUFDakMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sS0FBSyxNQUFNO2dCQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLDhGQUE4RixDQUFDLENBQUM7WUFDbEgsT0FBTyxDQUFDLE1BQU0sSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUNwRTtRQUNELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFTSxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQTRCLEVBQUUsVUFBc0MsRUFBRTtRQUN6RixJQUFJLE9BQU8sQ0FBQyxhQUFhLEtBQUssR0FBRyxFQUFFO1lBQ2pDLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEtBQUssTUFBTTtnQkFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4RkFBOEYsQ0FBQyxDQUFDO1lBQ2xILE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDekU7UUFDRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRU8sS0FBSyxDQUFDLGVBQWU7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDdEIsSUFBSSxXQUFrRixDQUFDO1lBQ3ZGLElBQUk7Z0JBQ0YsV0FBVyxHQUFHLENBQUMsd0RBQWEsMkJBQTJCLEdBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQzthQUN2RTtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNWLENBQUMsQ0FBQyxPQUFPO29CQUNQLEdBQUcsQ0FBQyxDQUFDLE9BQU8seUZBQXlGO3dCQUNyRyxxRkFBcUYsQ0FBQztnQkFDeEYsTUFBTSxDQUFDLENBQUM7YUFDVDtZQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxXQUFXLENBQUM7Z0JBQ2xDLEdBQUcsSUFBSSxDQUFDLGFBQWE7Z0JBQ3JCLGdCQUFnQixFQUFFLENBQUM7YUFDcEIsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztDQUNGO0FBOUNELHNDQThDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25hdHVyZVY0LCBTaWduYXR1cmVWNENyeXB0b0luaXQsIFNpZ25hdHVyZVY0SW5pdCB9IGZyb20gXCJAYXdzLXNkay9zaWduYXR1cmUtdjRcIjtcbmltcG9ydCB0eXBlIHsgQ3J0U2lnbmVyVjQsIENydFNpZ25lclY0SW5pdCB9IGZyb20gXCJAYXdzLXNkay9zaWduYXR1cmUtdjQtY3J0XCI7XG5pbXBvcnQge1xuICBIdHRwUmVxdWVzdCxcbiAgUmVxdWVzdFByZXNpZ25lcixcbiAgUmVxdWVzdFByZXNpZ25pbmdBcmd1bWVudHMsXG4gIFJlcXVlc3RTaWduZXIsXG4gIFJlcXVlc3RTaWduaW5nQXJndW1lbnRzLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgUzNTaWduZXJWNEluaXQgPSBTaWduYXR1cmVWNEluaXQgJlxuICBTaWduYXR1cmVWNENyeXB0b0luaXQgJiB7XG4gICAgcnVudGltZT86IHN0cmluZztcbiAgfTtcblxuLyoqXG4gKiBBIFNpZ1Y0LWNvbXBhdGlibGUgc2lnbmVyIGZvciBTMyBzZXJ2aWNlLiBJbiBvcmRlciB0byBzdXBwb3J0IFNpZ1Y0YSBhbGdvcml0aG0gYWNjb3JkaW5nIHRvIHRoZSBvcGVyYXRpb24gaW5wdXRcbiAqIGR5bmFtaWNhbGx5LCB0aGUgc2lnbmVyIHdyYXBzIG5hdGl2ZSBtb2R1bGUgU2lnVjRhIHNpZ25lciBhbmQgSlMgU2lnVjQgc2lnbmVyLiBJdCBzaWducyB0aGUgcmVxdWVzdCB3aXRoIFNpZ1Y0YVxuICogYWxnb3JpdGhtIGlmIHRoZSByZXF1ZXN0IG5lZWRzIHRvIGJlIHNpZ25lZCB3aXRoIGAqYCByZWdpb24uIE90aGVyd2lzZSwgaXQgc2lnbnMgdGhlIHJlcXVlc3Qgd2l0aCBub3JtYWwgU2lnVjRcbiAqIHNpZ25lci5cbiAqIE5vdGUgdGhhdCBTaWdWNGEgc2lnbmVyIGlzIG9ubHkgc3VwcG9ydGVkIGluIE5vZGUuanMgbm93IGJlY2F1c2UgaXQgZGVwZW5kcyBvbiBhIG5hdGl2ZSBkZXBlbmRlbmN5LlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNsYXNzIFMzU2lnbmF0dXJlVjQgaW1wbGVtZW50cyBSZXF1ZXN0UHJlc2lnbmVyLCBSZXF1ZXN0U2lnbmVyIHtcbiAgcHJpdmF0ZSByZWFkb25seSBzaWd2NFNpZ25lcjogU2lnbmF0dXJlVjQ7XG4gIHByaXZhdGUgc2lndjRhU2lnbmVyPzogQ3J0U2lnbmVyVjQ7XG4gIHByaXZhdGUgcmVhZG9ubHkgc2lnbmVyT3B0aW9uczogUzNTaWduZXJWNEluaXQ7XG5cbiAgY29uc3RydWN0b3Iob3B0aW9uczogUzNTaWduZXJWNEluaXQpIHtcbiAgICB0aGlzLnNpZ3Y0U2lnbmVyID0gbmV3IFNpZ25hdHVyZVY0KG9wdGlvbnMpO1xuICAgIHRoaXMuc2lnbmVyT3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgc2lnbihyZXF1ZXN0VG9TaWduOiBIdHRwUmVxdWVzdCwgb3B0aW9uczogUmVxdWVzdFNpZ25pbmdBcmd1bWVudHMgPSB7fSk6IFByb21pc2U8SHR0cFJlcXVlc3Q+IHtcbiAgICBpZiAob3B0aW9ucy5zaWduaW5nUmVnaW9uID09PSBcIipcIikge1xuICAgICAgaWYgKHRoaXMuc2lnbmVyT3B0aW9ucy5ydW50aW1lICE9PSBcIm5vZGVcIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyByZXF1ZXN0IHJlcXVpcmVzIHNpZ25pbmcgd2l0aCBTaWdWNEFzeW1tZXRyaWMgYWxnb3JpdGhtLiBJdCdzIG9ubHkgYXZhaWxhYmxlIGluIE5vZGUuanNcIik7XG4gICAgICByZXR1cm4gKGF3YWl0IHRoaXMuZ2V0U2lndjRhU2lnbmVyKCkpLnNpZ24ocmVxdWVzdFRvU2lnbiwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnNpZ3Y0U2lnbmVyLnNpZ24ocmVxdWVzdFRvU2lnbiwgb3B0aW9ucyk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgcHJlc2lnbihvcmlnaW5hbFJlcXVlc3Q6IEh0dHBSZXF1ZXN0LCBvcHRpb25zOiBSZXF1ZXN0UHJlc2lnbmluZ0FyZ3VtZW50cyA9IHt9KTogUHJvbWlzZTxIdHRwUmVxdWVzdD4ge1xuICAgIGlmIChvcHRpb25zLnNpZ25pbmdSZWdpb24gPT09IFwiKlwiKSB7XG4gICAgICBpZiAodGhpcy5zaWduZXJPcHRpb25zLnJ1bnRpbWUgIT09IFwibm9kZVwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHJlcXVlc3QgcmVxdWlyZXMgc2lnbmluZyB3aXRoIFNpZ1Y0QXN5bW1ldHJpYyBhbGdvcml0aG0uIEl0J3Mgb25seSBhdmFpbGFibGUgaW4gTm9kZS5qc1wiKTtcbiAgICAgIHJldHVybiAoYXdhaXQgdGhpcy5nZXRTaWd2NGFTaWduZXIoKSkucHJlc2lnbihvcmlnaW5hbFJlcXVlc3QsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zaWd2NFNpZ25lci5wcmVzaWduKG9yaWdpbmFsUmVxdWVzdCwgb3B0aW9ucyk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGdldFNpZ3Y0YVNpZ25lcigpOiBQcm9taXNlPENydFNpZ25lclY0PiB7XG4gICAgaWYgKCF0aGlzLnNpZ3Y0YVNpZ25lcikge1xuICAgICAgbGV0IENydFNpZ25lclY0OiBuZXcgKG9wdGlvbnM6IENydFNpZ25lclY0SW5pdCAmIFNpZ25hdHVyZVY0Q3J5cHRvSW5pdCkgPT4gQ3J0U2lnbmVyVjQ7XG4gICAgICB0cnkge1xuICAgICAgICBDcnRTaWduZXJWNCA9IChhd2FpdCBpbXBvcnQoXCJAYXdzLXNkay9zaWduYXR1cmUtdjQtY3J0XCIpKS5DcnRTaWduZXJWNDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgZS5tZXNzYWdlID1cbiAgICAgICAgICBgJHtlLm1lc3NhZ2V9XFxuUGxlYXNlIGNoZWNrIGlmIHlvdSBoYXZlIGluc3RhbGxlZCBcIkBhd3Mtc2RrL3NpZ25hdHVyZS12NC1jcnRcIiBwYWNrYWdlIGV4cGxpY2l0bHkuIFxcbmAgK1xuICAgICAgICAgIFwiRm9yIG1vcmUgaW5mb3JtYXRpb24gcGxlYXNlIGdvIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9hd3MvYXdzLXNkay1qcy12MyNrbm93bi1pc3N1ZXNcIjtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2lndjRhU2lnbmVyID0gbmV3IENydFNpZ25lclY0KHtcbiAgICAgICAgLi4udGhpcy5zaWduZXJPcHRpb25zLFxuICAgICAgICBzaWduaW5nQWxnb3JpdGhtOiAxLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnNpZ3Y0YVNpZ25lcjtcbiAgfVxufVxuIl19